import Dataframes.Internal.CWrappers
import Dataframes.Internal.Utils
import Dataframes.Table
import Dataframes.IO.Options

import Std.Foreign
import Std.Foreign.C.Value

class ElementType:
    IntElement
    RealElement
    TextElement
    MaybeIntElement
    MaybeRealElement
    MaybeTextElement

    def toArrowId: case self of
        IntElement: 9
        RealElement: 12
        TextElement: 13
        MaybeIntElement: 9
        MaybeRealElement: 12
        MaybeTextElement: 13

    def nullable: case self of
        IntElement: False
        RealElement: False
        TextElement: False
        MaybeIntElement: True
        MaybeRealElement: True
        MaybeTextElement: True

def listToMap list:
    def insert (k,v) m: m.insert k v
    list.foldLeft Map.empty insert

class CSVParser:
    CSVParser
    CustomizedParser ColumnNamePolicy [ElementType]

    def namePolicy: case self of
        CSVParser: TakeFromFirstRow
        CustomizedParser n _: n

    def typePolicy: case self of
        CSVParser: []
        CustomizedParser _ m: m

    def useCustomNames names:
        CustomizedParser (CustomNames names) self.typePolicy

    def useReadColumnNames:
        CustomizedParser TakeFromFirstRow self.typePolicy

    def useGenerateColumnNames:
        CustomizedParser Generate self.typePolicy

    def setTypes columnTypes:
        CustomizedParser self.namePolicy columnTypes

    def customNames: case self.namePolicy of
        CustomNames l: l
        _: []

    def readFile filepath:
        Table.fromWrapper $ callCsvParser (ParseCSVFile filepath) self.namePolicy self.typePolicy

    def readExcelFile filepath:
        Table.fromWrapper $ callCsvParser (ParseXLSXFile filepath) self.namePolicy self.typePolicy

    def readText text:
        Table.fromWrapper $ callCsvParser (ParseCSVContents text) self.namePolicy self.typePolicy

class CSVGenerator:
    CSVGenerator
    CSVGeneratorCustomized GeneratorHeaderPolicy CSVGeneratorQuotingPolicy

    def headerPolicy: case self of
        CSVGenerator: WriteHeaderLine
        CSVGeneratorCustomized hp _: hp
    def quotingPolicy: case self of
        CSVGenerator: QuoteWhenNeeded
        CSVGeneratorCustomized _ qp: qp
    def setHeaderPolicy hp:
        CSVGeneratorCustomized hp self.quotingPolicy
    def setQuotingPolicy qp:
        CSVGeneratorCustomized self.headerPolicy qp

    def generateText table:
        callHandlingError "writeTableToCsvString" CString [table.ptr.ptr.toCArg, self.headerPolicy.toCArg, self.quotingPolicy.toCArg] . toText
    def generateFile path table:
        CString.with path pathC:
            callHandlingError "writeTableToCsvFile" CString [pathC.toCArg, table.ptr.ptr.toCArg, self.headerPolicy.toCArg, self.quotingPolicy.toCArg] . toText