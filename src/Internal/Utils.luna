import Std.Base
import Std.Foreign
import Std.Foreign.C.Value
import Std.Time

def callHelper fname ret args:
    lookupSymbol "DataframeHelper" fname . call ret args

def benchmark desc act:
    t0 = Time.now
    a = act
    t1 = Time.now
    print ("Benchmarking: " + desc + ": " + (t1.diff t0).toText + " ms")

def releaseMethod:
    lookupSymbol "DataframeHelper" "release"

def callHandlingError fname ret args:
    err  = Pointer CString . malloc
    result = lookupSymbol "DataframeHelper" fname . call ret (args + [err.toCArg])
    case err.read.isNull of
        True:
            err.free
            result
        False:
            errorMsg = err.read.toText
            err.free
            throw errorMsg
